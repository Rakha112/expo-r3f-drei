/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useAnimations, useGLTF } from "@react-three/drei";
import React, { useEffect, useRef } from "react";
import * as THREE from "three";
import { GLTF } from "three-stdlib";
import Model from "../assets/models/Character.glb";

type GLTFResult = GLTF & {
  nodes: {
    vanguard_Mesh: THREE.SkinnedMesh;
    vanguard_visor: THREE.SkinnedMesh;
    mixamorigHips: THREE.Bone;
  };
  materials: {
    VanguardBodyMat: THREE.MeshPhysicalMaterial;
    Vanguard_VisorMat: THREE.MeshPhysicalMaterial;
  };
};

const ActionName = "Armature|mixamo.com|Layer0";

export default function Character(props: React.JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF(
    Model
  ) as unknown as GLTFResult;
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    actions[ActionName]?.play();
  }, [actions]);

  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      scale={[2, 2, 2]}
      position={[0, -1, 0]}
    >
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <skinnedMesh
            name="vanguard_Mesh"
            geometry={nodes.vanguard_Mesh.geometry}
            material={materials.VanguardBodyMat}
            skeleton={nodes.vanguard_Mesh.skeleton}
          />
          <skinnedMesh
            name="vanguard_visor"
            geometry={nodes.vanguard_visor.geometry}
            material={materials.Vanguard_VisorMat}
            skeleton={nodes.vanguard_visor.skeleton}
          />
          <primitive object={nodes.mixamorigHips} />
        </group>
      </group>
    </group>
  );
}
